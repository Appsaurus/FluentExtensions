{"sections":[],"identifier":{"url":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/FluentKit\/FieldKey","interfaceLanguage":"swift"},"abstract":[{"text":"Provides convenient string-based initialization for ","type":"text"},{"type":"codeVoice","code":"FieldKey"},{"text":".","type":"text"}],"topicSections":[{"generated":true,"anchor":"Initializers","identifiers":["doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/FluentKit\/FieldKey\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/FluentKit\/FieldKey\/reflectionBuilder"],"title":"Type Properties","anchor":"Type-Properties","generated":true},{"identifiers":["doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/FluentKit\/FieldKey\/group(_:_:)"],"title":"Type Methods","anchor":"Type-Methods","generated":true}],"hierarchy":{"paths":[["doc:\/\/FluentExtensions\/documentation\/FluentExtensions","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/FluentKit"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"FieldKey","preciseIdentifier":"s:9FluentKit8FieldKeyO"}]}]},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This extension simplifies the creation of database field keys by allowing direct initialization","type":"text"},{"text":" ","type":"text"},{"text":"from string literals, making database schema definitions more concise and readable.","type":"text"}]},{"type":"heading","text":"Example Usage:","level":2,"anchor":"Example-Usage"},{"type":"codeListing","syntax":"swift","code":["let nameField = FieldKey(\"name\")","let emailField = FieldKey(\"email\")"]},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"This is particularly useful when defining database schemas or performing queries","type":"text"},{"type":"text","text":" "},{"type":"text","text":"where field keys need to be created from dynamic string values."}]}],"type":"aside","style":"note"}],"kind":"content"}],"metadata":{"title":"FieldKey","navigatorTitle":[{"kind":"identifier","text":"FieldKey"}],"extendedModule":"FluentKit","role":"symbol","modules":[{"name":"FluentExtensions","relatedModules":["FluentKit"]}],"roleHeading":"Extended Enumeration","symbolKind":"extension","externalID":"s:e:s:9FluentKit8FieldKeyO0A10ExtensionsE17reflectionBuilderyAC7Runtime12PropertyInfoVcvpZ","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","preciseIdentifier":"s:9FluentKit8FieldKeyO","text":"FieldKey"}]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fluentextensions\/fluentkit\/fieldkey"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://FluentExtensions/documentation/FluentExtensions/FluentKit/FieldKey/group(_:_:)":{"abstract":[{"text":"Creates a composite field key by combining a group key with a field key","type":"text"}],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/FluentKit\/FieldKey\/group(_:_:)","role":"symbol","url":"\/documentation\/fluentextensions\/fluentkit\/fieldkey\/group(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"group"},{"text":"(","kind":"text"},{"text":"FieldKey","preciseIdentifier":"s:9FluentKit8FieldKeyO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:9FluentKit8FieldKeyO","kind":"typeIdentifier","text":"FieldKey"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:9FluentKit8FieldKeyO","kind":"typeIdentifier","text":"FieldKey"}],"type":"topic","title":"group(_:_:)","kind":"symbol"},"doc://FluentExtensions/documentation/FluentExtensions/FluentKit/FieldKey/init(_:)":{"abstract":[{"type":"text","text":"Initializes a new "},{"type":"codeVoice","code":"FieldKey"},{"type":"text","text":" instance from a string value."}],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/FluentKit\/FieldKey\/init(_:)","title":"init(_:)","role":"symbol","url":"\/documentation\/fluentextensions\/fluentkit\/fieldkey\/init(_:)","kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://FluentExtensions/documentation/FluentExtensions/FluentKit/FieldKey":{"title":"FieldKey","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/FluentKit\/FieldKey","navigatorTitle":[{"kind":"identifier","text":"FieldKey"}],"abstract":[{"type":"text","text":"Provides convenient string-based initialization for "},{"code":"FieldKey","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"FieldKey","kind":"identifier","preciseIdentifier":"s:9FluentKit8FieldKeyO"}],"url":"\/documentation\/fluentextensions\/fluentkit\/fieldkey"},"doc://FluentExtensions/documentation/FluentExtensions":{"title":"FluentExtensions","role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions","type":"topic","url":"\/documentation\/fluentextensions","kind":"symbol","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/FluentKit":{"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/FluentKit","role":"collection","type":"topic","url":"\/documentation\/fluentextensions\/fluentkit","kind":"symbol","abstract":[],"title":"FluentKit"},"doc://FluentExtensions/documentation/FluentExtensions/FluentKit/FieldKey/reflectionBuilder":{"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/FluentKit\/FieldKey\/reflectionBuilder","kind":"symbol","abstract":[{"text":"Default reflection builder that converts ReflectedSchemaProperty instances to FieldKeys.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This is used as the default field key builder in schema reflection methods."}],"title":"reflectionBuilder","role":"symbol","url":"\/documentation\/fluentextensions\/fluentkit\/fieldkey\/reflectionbuilder","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"reflectionBuilder","kind":"identifier"},{"text":": (","kind":"text"},{"text":"ReflectedSchemaProperty","kind":"typeIdentifier","preciseIdentifier":"s:16FluentExtensions23ReflectedSchemaPropertya"},{"kind":"text","text":") -> "},{"text":"FieldKey","kind":"typeIdentifier","preciseIdentifier":"s:9FluentKit8FieldKeyO"}]}}}