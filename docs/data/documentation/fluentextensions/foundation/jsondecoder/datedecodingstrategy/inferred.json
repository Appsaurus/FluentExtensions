{"hierarchy":{"paths":[["doc:\/\/FluentExtensions\/documentation\/FluentExtensions","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Foundation","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Foundation\/JSONDecoder","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Foundation\/JSONDecoder\/DateDecodingStrategy"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"DateDecodingStrategy","preciseIdentifier":"s:10Foundation11JSONDecoderC20DateDecodingStrategyO"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This strategy uses the ","type":"text"},{"code":"Date(string:)","type":"codeVoice"},{"type":"text","text":" initializer to parse date strings in various formats."},{"type":"text","text":" "},{"type":"text","text":"Itâ€™s particularly useful when dealing with APIs that may return dates in inconsistent formats."}]},{"type":"codeListing","syntax":"swift","code":["let decoder = JSONDecoder()","decoder.dateDecodingStrategy = .inferred","","\/\/ Will successfully decode dates in various formats:","\/\/ {\"date\": \"2024-02-24T15:30:00Z\"}","\/\/ {\"date\": \"2024-02-24 15:30:00\"}","\/\/ {\"date\": \"1708789800\"}"]},{"content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"DecodingError.typeMismatch"},{"text":" if the date string cannot be parsed","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note","name":"Throws"}]}],"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier","text":"JSONDecoder"},{"kind":"text","text":"."},{"text":"DateDecodingStrategy","preciseIdentifier":"s:10Foundation11JSONDecoderC20DateDecodingStrategyO","kind":"typeIdentifier"}],"externalID":"s:10Foundation11JSONDecoderC20DateDecodingStrategyO16FluentExtensionsE8inferredAEvpZ","extendedModule":"Foundation","symbolKind":"property","role":"symbol","title":"inferred","modules":[{"relatedModules":["Foundation"],"name":"FluentExtensions"}],"roleHeading":"Type Property"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Foundation\/JSONDecoder\/DateDecodingStrategy\/inferred"},"variants":[{"paths":["\/documentation\/fluentextensions\/foundation\/jsondecoder\/datedecodingstrategy\/inferred"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A custom date decoding strategy that attempts to infer the date format from the string representation."}],"references":{"doc://FluentExtensions/documentation/FluentExtensions/Foundation/JSONDecoder":{"title":"JSONDecoder","type":"topic","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Foundation\/JSONDecoder","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"role":"symbol","url":"\/documentation\/fluentextensions\/foundation\/jsondecoder"},"doc://FluentExtensions/documentation/FluentExtensions/Foundation/JSONDecoder/DateDecodingStrategy/inferred":{"role":"symbol","url":"\/documentation\/fluentextensions\/foundation\/jsondecoder\/datedecodingstrategy\/inferred","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":"."},{"text":"DateDecodingStrategy","preciseIdentifier":"s:10Foundation11JSONDecoderC20DateDecodingStrategyO","kind":"typeIdentifier"}],"abstract":[{"text":"A custom date decoding strategy that attempts to infer the date format from the string representation.","type":"text"}],"type":"topic","title":"inferred","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Foundation\/JSONDecoder\/DateDecodingStrategy\/inferred"},"doc://FluentExtensions/documentation/FluentExtensions/Foundation/JSONDecoder/DateDecodingStrategy":{"role":"symbol","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Foundation\/JSONDecoder\/DateDecodingStrategy","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONDecoder","kind":"identifier","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":"."},{"kind":"identifier","preciseIdentifier":"s:10Foundation11JSONDecoderC20DateDecodingStrategyO","text":"DateDecodingStrategy"}],"navigatorTitle":[{"text":"DateDecodingStrategy","kind":"identifier"}],"url":"\/documentation\/fluentextensions\/foundation\/jsondecoder\/datedecodingstrategy","title":"JSONDecoder.DateDecodingStrategy","kind":"symbol","abstract":[],"type":"topic"},"doc://FluentExtensions/documentation/FluentExtensions/Foundation":{"url":"\/documentation\/fluentextensions\/foundation","abstract":[],"role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Foundation","title":"Foundation","type":"topic","kind":"symbol"},"doc://FluentExtensions/documentation/FluentExtensions":{"title":"FluentExtensions","role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions","type":"topic","url":"\/documentation\/fluentextensions","kind":"symbol","abstract":[]}}}