{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/fluentextensions\/foundation\/date\/init(string:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Foundation\/Date\/init(string:)"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"string"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"string","content":[{"inlineContent":[{"text":"A string representing a date in any of the supported formats","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A new Date instance if the string can be parsed, nil otherwise"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This initializer supports a wide variety of date formats including:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"ISO8601 formats with ‘T’ separator and ‘Z’ suffix"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"ISO8601 formats with ‘T’ separator","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Standard datetime formats with space separator"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Unix timestamps","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"If the string matches any of the supported formats, the date will be created using that format.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If the string represents a Unix timestamp (numeric value), it will be interpreted as seconds since 1970."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ ISO8601 format","let date1 = Date(string: \"2024-02-24T15:30:00Z\")","","\/\/ Standard format","let date2 = Date(string: \"2024-02-24 15:30:00\")","","\/\/ Unix timestamp","let date3 = Date(string: \"1708789800\")"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/FluentExtensions\/documentation\/FluentExtensions","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Foundation","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Foundation\/Date"]]},"abstract":[{"text":"Attempts to create a ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" instance by inferring the format of a given date string.","type":"text"}],"metadata":{"role":"symbol","roleHeading":"Initializer","modules":[{"relatedModules":["Foundation"],"name":"FluentExtensions"}],"title":"init(string:)","extendedModule":"Foundation","externalID":"s:10Foundation4DateV16FluentExtensionsE6stringACSgSS_tcfc","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"text":"string","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}]},"references":{"doc://FluentExtensions/documentation/FluentExtensions/Foundation":{"url":"\/documentation\/fluentextensions\/foundation","abstract":[],"role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Foundation","title":"Foundation","type":"topic","kind":"symbol"},"doc://FluentExtensions/documentation/FluentExtensions/Foundation/Date/init(string:)":{"type":"topic","url":"\/documentation\/fluentextensions\/foundation\/date\/init(string:)","role":"symbol","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Foundation\/Date\/init(string:)","abstract":[{"type":"text","text":"Attempts to create a "},{"type":"codeVoice","code":"Date"},{"text":" instance by inferring the format of a given date string.","type":"text"}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"string","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"title":"init(string:)"},"doc://FluentExtensions/documentation/FluentExtensions/Foundation/Date":{"url":"\/documentation\/fluentextensions\/foundation\/date","kind":"symbol","type":"topic","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Foundation\/Date","title":"Date","role":"symbol","abstract":[],"navigatorTitle":[{"text":"Date","kind":"identifier"}],"fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"Date","kind":"identifier","preciseIdentifier":"s:10Foundation4DateV"}]},"doc://FluentExtensions/documentation/FluentExtensions":{"title":"FluentExtensions","role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions","type":"topic","url":"\/documentation\/fluentextensions","kind":"symbol","abstract":[]}}}