{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/FluentExtensions\/documentation\/FluentExtensions","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift\/Bool"]]},"abstract":[{"text":"Creates a CASE statement with multiple conditions and an optional else clause.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CASE"},{"kind":"text","text":"("},{"kind":"externalParam","text":"WHEN"},{"text":" ","kind":"text"},{"text":"cases","kind":"internalParam"},{"text":": [(condition","kind":"text"},{"text":": any ","kind":"text"},{"text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier"},{"kind":"text","text":", THEN"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"},{"text":")], ","kind":"text"},{"text":"ELSE","kind":"externalParam"},{"kind":"text","text":": (any "},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":")? = nil) -> "},{"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase","preciseIdentifier":"s:16FluentExtensions7SQLCaseV","text":"SQLCase","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"cases","content":[{"type":"paragraph","inlineContent":[{"text":"Array of tuples containing condition-predicate pairs","type":"text"}]}]},{"name":"ELSE","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Optional alternative expression for when no conditions match"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"A new SQLCase expression","type":"text"}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift\/Bool\/CASE(WHEN:ELSE:)","interfaceLanguage":"swift"},"metadata":{"modules":[{"relatedModules":["SQLKit"],"name":"FluentExtensions"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CASE"},{"text":"(","kind":"text"},{"text":"WHEN","kind":"externalParam"},{"text":": [(condition","kind":"text"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":", THEN"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"},{"kind":"text","text":")], "},{"text":"ELSE","kind":"externalParam"},{"text":": (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression"},{"kind":"text","text":")?) -> "},{"preciseIdentifier":"s:16FluentExtensions7SQLCaseV","text":"SQLCase","kind":"typeIdentifier"}],"roleHeading":"Instance Method","title":"CASE(WHEN:ELSE:)","extendedModule":"SQLKit","symbolKind":"method","role":"symbol","externalID":"s:6SQLKit13SQLExpressionP16FluentExtensionsE4CASE4WHEN4ELSEAD7SQLCaseVSayAaB_p9condition_AaB_p4THENtG_AaB_pSgtF::SYNTHESIZED::s:Sb"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fluentextensions\/swift\/bool\/case(when:else:)"]}],"references":{"doc://FluentExtensions/documentation/FluentExtensions/Swift/Bool/CASE(WHEN:ELSE:)":{"abstract":[{"text":"Creates a CASE statement with multiple conditions and an optional else clause.","type":"text"}],"kind":"symbol","title":"CASE(WHEN:ELSE:)","role":"symbol","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift\/Bool\/CASE(WHEN:ELSE:)","url":"\/documentation\/fluentextensions\/swift\/bool\/case(when:else:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"CASE","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"WHEN"},{"text":": [(condition","kind":"text"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":", THEN","kind":"text"},{"text":": any ","kind":"text"},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":")], ","kind":"text"},{"kind":"externalParam","text":"ELSE"},{"text":": (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression"},{"text":")?) -> ","kind":"text"},{"text":"SQLCase","preciseIdentifier":"s:16FluentExtensions7SQLCaseV","kind":"typeIdentifier"}]},"doc://FluentExtensions/documentation/FluentExtensions":{"title":"FluentExtensions","role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions","type":"topic","url":"\/documentation\/fluentextensions","kind":"symbol","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/Swift/Bool":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"Bool","kind":"identifier"}],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/fluentextensions\/swift\/bool","abstract":[{"text":"Extends ","type":"text"},{"code":"Bool","type":"codeVoice"},{"type":"text","text":" to conform to "},{"type":"codeVoice","code":"SQLExpression"},{"type":"text","text":", enabling direct use in SQL queries."}],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift\/Bool","title":"Bool"},"doc://FluentExtensions/documentation/FluentExtensions/SQLCase":{"url":"\/documentation\/fluentextensions\/sqlcase","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase","kind":"symbol","title":"SQLCase","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLCase"}],"abstract":[{"text":"A type that represents a SQL CASE statement expression.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SQLCase"}],"type":"topic"},"doc://FluentExtensions/documentation/FluentExtensions/Swift":{"title":"Swift","type":"topic","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift","role":"collection","kind":"symbol","url":"\/documentation\/fluentextensions\/swift","abstract":[]}}}