{"identifier":{"url":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift\/KeyPath\/CASE(WHEN:ELSE:)-3vzil","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/FluentExtensions\/documentation\/FluentExtensions","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift\/KeyPath"]]},"metadata":{"modules":[{"relatedModules":["SQLKit"],"name":"FluentExtensions"}],"symbolKind":"method","externalID":"s:6SQLKit13SQLExpressionP16FluentExtensionsE4CASE4WHEN4ELSEAD7SQLCaseVSayAaB_p9condition_AaB_p4THENtG_AaB_pSgtF::SYNTHESIZED::s:s7KeyPathC","roleHeading":"Instance Method","role":"symbol","title":"CASE(WHEN:ELSE:)","extendedModule":"SQLKit","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"CASE","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"WHEN"},{"text":": [(condition","kind":"text"},{"text":": any ","kind":"text"},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":", THEN","kind":"text"},{"kind":"text","text":": any "},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":")], ","kind":"text"},{"text":"ELSE","kind":"externalParam"},{"text":": (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression"},{"kind":"text","text":")?) -> "},{"preciseIdentifier":"s:16FluentExtensions7SQLCaseV","kind":"typeIdentifier","text":"SQLCase"}]},"abstract":[{"type":"text","text":"Creates a CASE statement with multiple conditions and an optional else clause."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fluentextensions\/swift\/keypath\/case(when:else:)-3vzil"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"CASE","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"WHEN"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"cases"},{"kind":"text","text":": [(condition"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":", THEN","kind":"text"},{"kind":"text","text":": any "},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":")], "},{"kind":"externalParam","text":"ELSE"},{"text":": (any ","kind":"text"},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":")? = nil) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16FluentExtensions7SQLCaseV","text":"SQLCase","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"cases","content":[{"type":"paragraph","inlineContent":[{"text":"Array of tuples containing condition-predicate pairs","type":"text"}]}]},{"name":"ELSE","content":[{"inlineContent":[{"type":"text","text":"Optional alternative expression for when no conditions match"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A new SQLCase expression"}]}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://FluentExtensions/documentation/FluentExtensions":{"title":"FluentExtensions","role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions","type":"topic","url":"\/documentation\/fluentextensions","kind":"symbol","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/Swift":{"title":"Swift","type":"topic","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift","role":"collection","kind":"symbol","url":"\/documentation\/fluentextensions\/swift","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/Swift/KeyPath":{"type":"topic","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"}],"navigatorTitle":[{"kind":"identifier","text":"KeyPath"}],"title":"KeyPath","role":"symbol","abstract":[{"type":"text","text":"Extension providing database schema and query related functionality for KeyPaths that point to queryable properties in a Schema."}],"url":"\/documentation\/fluentextensions\/swift\/keypath","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift\/KeyPath","kind":"symbol"},"doc://FluentExtensions/documentation/FluentExtensions/Swift/KeyPath/CASE(WHEN:ELSE:)-3vzil":{"abstract":[{"type":"text","text":"Creates a CASE statement with multiple conditions and an optional else clause."}],"kind":"symbol","type":"topic","url":"\/documentation\/fluentextensions\/swift\/keypath\/case(when:else:)-3vzil","role":"symbol","title":"CASE(WHEN:ELSE:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"CASE","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"WHEN"},{"text":": [(condition","kind":"text"},{"text":": any ","kind":"text"},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":", THEN"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":")], "},{"text":"ELSE","kind":"externalParam"},{"kind":"text","text":": (any "},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"},{"text":")?) -> ","kind":"text"},{"text":"SQLCase","kind":"typeIdentifier","preciseIdentifier":"s:16FluentExtensions7SQLCaseV"}],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift\/KeyPath\/CASE(WHEN:ELSE:)-3vzil"},"doc://FluentExtensions/documentation/FluentExtensions/SQLCase":{"url":"\/documentation\/fluentextensions\/sqlcase","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase","kind":"symbol","title":"SQLCase","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLCase"}],"abstract":[{"text":"A type that represents a SQL CASE statement expression.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SQLCase"}],"type":"topic"}}}