{"metadata":{"roleHeading":"Instance Method","modules":[{"relatedModules":["SQLKit"],"name":"FluentExtensions"}],"externalID":"s:6SQLKit13SQLExpressionP16FluentExtensionsE4CASE4WHEN4ELSEAD7SQLCaseVAaB_p9condition_AaB_p4THENtd_AaB_pSgtF::SYNTHESIZED::s:s7KeyPathC","title":"CASE(WHEN:ELSE:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"CASE"},{"text":"(","kind":"text"},{"text":"WHEN","kind":"externalParam"},{"kind":"text","text":": (condition"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":", THEN","kind":"text"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":")..., "},{"kind":"externalParam","text":"ELSE"},{"kind":"text","text":": (any "},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier","text":"SQLExpression"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:16FluentExtensions7SQLCaseV","text":"SQLCase"}],"extendedModule":"SQLKit","role":"symbol"},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CASE"},{"kind":"text","text":"("},{"kind":"externalParam","text":"WHEN"},{"kind":"text","text":" "},{"kind":"internalParam","text":"cases"},{"kind":"text","text":": (condition"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"},{"text":", THEN","kind":"text"},{"kind":"text","text":": any "},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":")..., ","kind":"text"},{"text":"ELSE","kind":"externalParam"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"},{"kind":"text","text":")? = nil) -> "},{"text":"SQLCase","preciseIdentifier":"s:16FluentExtensions7SQLCaseV","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"cases","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Variadic tuples containing condition-predicate pairs"}]}]},{"name":"ELSE","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Optional alternative expression for when no conditions match"}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"text":"A new SQLCase expression","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/fluentextensions\/swift\/keypath\/case(when:else:)-8pxnv"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift\/KeyPath\/CASE(WHEN:ELSE:)-8pxnv","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/FluentExtensions\/documentation\/FluentExtensions","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift\/KeyPath"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Creates a CASE statement with variadic conditions and an optional else clause."}],"references":{"doc://FluentExtensions/documentation/FluentExtensions/SQLCase":{"url":"\/documentation\/fluentextensions\/sqlcase","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase","kind":"symbol","title":"SQLCase","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLCase"}],"abstract":[{"text":"A type that represents a SQL CASE statement expression.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SQLCase"}],"type":"topic"},"doc://FluentExtensions/documentation/FluentExtensions/Swift/KeyPath/CASE(WHEN:ELSE:)-8pxnv":{"abstract":[{"type":"text","text":"Creates a CASE statement with variadic conditions and an optional else clause."}],"url":"\/documentation\/fluentextensions\/swift\/keypath\/case(when:else:)-8pxnv","type":"topic","kind":"symbol","role":"symbol","title":"CASE(WHEN:ELSE:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CASE"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"WHEN"},{"kind":"text","text":": (condition"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier","text":"SQLExpression"},{"text":", THEN","kind":"text"},{"text":": any ","kind":"text"},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":")..., "},{"kind":"externalParam","text":"ELSE"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier","text":"SQLExpression"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:16FluentExtensions7SQLCaseV","text":"SQLCase"}],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift\/KeyPath\/CASE(WHEN:ELSE:)-8pxnv"},"doc://FluentExtensions/documentation/FluentExtensions":{"title":"FluentExtensions","role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions","type":"topic","url":"\/documentation\/fluentextensions","kind":"symbol","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/Swift/KeyPath":{"type":"topic","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"}],"navigatorTitle":[{"kind":"identifier","text":"KeyPath"}],"title":"KeyPath","role":"symbol","abstract":[{"type":"text","text":"Extension providing database schema and query related functionality for KeyPaths that point to queryable properties in a Schema."}],"url":"\/documentation\/fluentextensions\/swift\/keypath","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift\/KeyPath","kind":"symbol"},"doc://FluentExtensions/documentation/FluentExtensions/Swift":{"title":"Swift","type":"topic","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Swift","role":"collection","kind":"symbol","url":"\/documentation\/fluentextensions\/swift","abstract":[]}}}