{"hierarchy":{"paths":[["doc:\/\/FluentExtensions\/documentation\/FluentExtensions"]]},"sections":[],"metadata":{"title":"RangeFilterable","symbolKind":"typealias","navigatorTitle":[{"text":"RangeFilterable","kind":"identifier"}],"modules":[{"name":"FluentExtensions"}],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RangeFilterable"}],"roleHeading":"Type Alias","externalID":"s:16FluentExtensions15RangeFilterablea"},"abstract":[{"text":"A type that can be used in range-based filtering operations.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The type must conform to both "},{"code":"Strideable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Codable"},{"text":" protocols.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RangeFilterable"},{"kind":"text","text":" = "},{"text":"Strideable","preciseIdentifier":"s:Sx","kind":"typeIdentifier"},{"text":" & ","kind":"text"},{"text":"Codable","kind":"typeIdentifier","preciseIdentifier":"s:s7Codablea"}],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeFilterable"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fluentextensions\/rangefilterable"]}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://FluentExtensions/documentation/FluentExtensions":{"title":"FluentExtensions","role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions","type":"topic","url":"\/documentation\/fluentextensions","kind":"symbol","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/RangeFilterable":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RangeFilterable"}],"abstract":[{"type":"text","text":"A type that can be used in range-based filtering operations."},{"type":"text","text":" "},{"text":"The type must conform to both ","type":"text"},{"type":"codeVoice","code":"Strideable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" protocols."}],"navigatorTitle":[{"kind":"identifier","text":"RangeFilterable"}],"kind":"symbol","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeFilterable","url":"\/documentation\/fluentextensions\/rangefilterable","title":"RangeFilterable","type":"topic","role":"symbol"}}}