{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLCase","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Use "},{"code":"SQLCase","type":"codeVoice"},{"type":"text","text":" to construct SQL CASE WHEN statements for conditional logic in your SQL queries."},{"type":"text","text":" "},{"type":"text","text":"This allows for branching logic directly in your SQL statements."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Example:","type":"text"}]},{"code":["\/\/ Simple CASE WHEN statement","let case = SQLCase(when: [(age > 18, \"Adult\"), (age > 12, \"Teen\")], else: \"Child\")","","\/\/ Complex nested conditions","let case = SQLCase(when: [","    (SQLBinary(.and, left: age > 18, right: salary > 50000), \"High earning adult\"),","    (age > 18, \"Adult\"),","    (age > 12, \"Teen\")","], else: \"Child\")"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/FluentExtensions\/documentation\/FluentExtensions"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fluentextensions\/sqlcase"]}],"metadata":{"title":"SQLCase","role":"symbol","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SQLCase","kind":"identifier"}],"modules":[{"name":"FluentExtensions"}],"externalID":"s:16FluentExtensions7SQLCaseV","navigatorTitle":[{"kind":"identifier","text":"SQLCase"}],"roleHeading":"Structure"},"identifier":{"url":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase\/init(when:else:)-75hsv","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase\/init(when:else:)-l1pr"],"anchor":"Initializers","title":"Initializers","generated":true},{"generated":true,"identifiers":["doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase\/alternative","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase\/cases"],"anchor":"Instance-Properties","title":"Instance Properties"},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase\/serialize(to:)"]},{"anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase\/SQLExpression-Implementations"],"title":"Default Implementations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"A type that represents a SQL CASE statement expression.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/FluentExtensions\/6SQLKit13SQLExpressionP","doc:\/\/FluentExtensions\/s8SendableP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"sections":[],"references":{"doc://FluentExtensions/documentation/FluentExtensions/SQLCase/init(when:else:)-75hsv":{"abstract":[{"text":"Creates a new CASE statement with variadic conditions and an optional else clause.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"when"},{"text":": (any ","kind":"text"},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":", any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression"},{"kind":"text","text":")..., "},{"text":"else","kind":"externalParam"},{"text":": (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression"},{"kind":"text","text":")?)"}],"role":"symbol","url":"\/documentation\/fluentextensions\/sqlcase\/init(when:else:)-75hsv","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase\/init(when:else:)-75hsv","kind":"symbol","type":"topic","title":"init(when:else:)"},"doc://FluentExtensions/documentation/FluentExtensions/SQLCase":{"url":"\/documentation\/fluentextensions\/sqlcase","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase","kind":"symbol","title":"SQLCase","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLCase"}],"abstract":[{"text":"A type that represents a SQL CASE statement expression.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SQLCase"}],"type":"topic"},"doc://FluentExtensions/documentation/FluentExtensions/SQLCase/serialize(to:)":{"title":"serialize(to:)","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase\/serialize(to:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"serialize","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"SQLSerializer","preciseIdentifier":"s:6SQLKit13SQLSerializerV"},{"kind":"text","text":")"}],"abstract":[{"text":"Serializes the CASE statement into SQL syntax","type":"text"}],"url":"\/documentation\/fluentextensions\/sqlcase\/serialize(to:)"},"doc://FluentExtensions/documentation/FluentExtensions":{"title":"FluentExtensions","role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions","type":"topic","url":"\/documentation\/fluentextensions","kind":"symbol","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/SQLCase/init(when:else:)-l1pr":{"role":"symbol","abstract":[{"type":"text","text":"Creates a new CASE statement with multiple conditions and an optional else clause."}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"when"},{"kind":"text","text":": [(any "},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier","text":"SQLExpression"},{"text":", any ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"},{"text":")], ","kind":"text"},{"text":"else","kind":"externalParam"},{"kind":"text","text":": (any "},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":")?)","kind":"text"}],"url":"\/documentation\/fluentextensions\/sqlcase\/init(when:else:)-l1pr","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase\/init(when:else:)-l1pr","kind":"symbol","title":"init(when:else:)"},"doc://FluentExtensions/documentation/FluentExtensions/SQLCase/SQLExpression-Implementations":{"title":"SQLExpression Implementations","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase\/SQLExpression-Implementations","kind":"article","type":"topic","role":"collectionGroup","abstract":[],"url":"\/documentation\/fluentextensions\/sqlcase\/sqlexpression-implementations"},"doc://FluentExtensions/documentation/FluentExtensions/SQLCase/cases":{"abstract":[{"text":"Array of condition-predicate pairs representing WHEN\/THEN clauses","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cases"},{"text":": [(condition","kind":"text"},{"text":": any ","kind":"text"},{"text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier"},{"kind":"text","text":", predicate"},{"text":": any ","kind":"text"},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":")]"}],"role":"symbol","url":"\/documentation\/fluentextensions\/sqlcase\/cases","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase\/cases","kind":"symbol","type":"topic","title":"cases"},"doc://FluentExtensions/documentation/FluentExtensions/SQLCase/alternative":{"role":"symbol","kind":"symbol","title":"alternative","type":"topic","url":"\/documentation\/fluentextensions\/sqlcase\/alternative","abstract":[{"text":"Optional ELSE clause expression","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"alternative","kind":"identifier"},{"kind":"text","text":": (any "},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":")?"}],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase\/alternative"},"doc://FluentExtensions/6SQLKit13SQLExpressionP":{"identifier":"doc:\/\/FluentExtensions\/6SQLKit13SQLExpressionP","type":"unresolvable","title":"SQLKit.SQLExpression"},"doc://FluentExtensions/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/FluentExtensions\/s8SendableP","type":"unresolvable"}}}