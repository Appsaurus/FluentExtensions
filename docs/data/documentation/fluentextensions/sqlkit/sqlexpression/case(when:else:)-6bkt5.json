{"variants":[{"paths":["\/documentation\/fluentextensions\/sqlkit\/sqlexpression\/case(when:else:)-6bkt5"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CASE"},{"text":"(","kind":"text"},{"text":"WHEN","kind":"externalParam"},{"kind":"text","text":" "},{"text":"cases","kind":"internalParam"},{"text":": [(condition","kind":"text"},{"text":": any ","kind":"text"},{"text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier"},{"text":", THEN","kind":"text"},{"text":": any ","kind":"text"},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":")], "},{"kind":"externalParam","text":"ELSE"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier","text":"SQLExpression"},{"text":")? = nil) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16FluentExtensions7SQLCaseV","text":"SQLCase","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"cases","content":[{"inlineContent":[{"text":"Array of tuples containing condition-predicate pairs","type":"text"}],"type":"paragraph"}]},{"name":"ELSE","content":[{"inlineContent":[{"text":"Optional alternative expression for when no conditions match","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"A new SQLCase expression","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression\/CASE(WHEN:ELSE:)-6bkt5","interfaceLanguage":"swift"},"metadata":{"extendedModule":"SQLKit","role":"symbol","modules":[{"name":"FluentExtensions","relatedModules":["SQLKit"]}],"title":"CASE(WHEN:ELSE:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CASE","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"WHEN"},{"text":": [(condition","kind":"text"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":", THEN","kind":"text"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression"},{"text":")], ","kind":"text"},{"kind":"externalParam","text":"ELSE"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:16FluentExtensions7SQLCaseV","text":"SQLCase"}],"externalID":"s:6SQLKit13SQLExpressionP16FluentExtensionsE4CASE4WHEN4ELSEAD7SQLCaseVSayAaB_p9condition_AaB_p4THENtG_AaB_pSgtF","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/FluentExtensions\/documentation\/FluentExtensions","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression"]]},"abstract":[{"type":"text","text":"Creates a CASE statement with multiple conditions and an optional else clause."}],"references":{"doc://FluentExtensions/documentation/FluentExtensions/SQLKit/SQLExpression/CASE(WHEN:ELSE:)-6bkt5":{"title":"CASE(WHEN:ELSE:)","url":"\/documentation\/fluentextensions\/sqlkit\/sqlexpression\/case(when:else:)-6bkt5","kind":"symbol","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression\/CASE(WHEN:ELSE:)-6bkt5","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"CASE","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"WHEN"},{"text":": [(condition","kind":"text"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression"},{"text":", THEN","kind":"text"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":")], ","kind":"text"},{"kind":"externalParam","text":"ELSE"},{"kind":"text","text":": (any "},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":")?) -> ","kind":"text"},{"preciseIdentifier":"s:16FluentExtensions7SQLCaseV","text":"SQLCase","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Creates a CASE statement with multiple conditions and an optional else clause."}],"role":"symbol","type":"topic"},"doc://FluentExtensions/documentation/FluentExtensions":{"title":"FluentExtensions","role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions","type":"topic","url":"\/documentation\/fluentextensions","kind":"symbol","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/SQLCase":{"url":"\/documentation\/fluentextensions\/sqlcase","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase","kind":"symbol","title":"SQLCase","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLCase"}],"abstract":[{"text":"A type that represents a SQL CASE statement expression.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SQLCase"}],"type":"topic"},"doc://FluentExtensions/documentation/FluentExtensions/SQLKit":{"title":"SQLKit","type":"topic","kind":"symbol","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit","url":"\/documentation\/fluentextensions\/sqlkit","role":"collection","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/SQLKit/SQLExpression":{"abstract":[{"type":"text","text":"Extends "},{"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression","type":"reference","isActive":true},{"type":"text","text":" to provide SQL aliasing functionality."}],"type":"topic","url":"\/documentation\/fluentextensions\/sqlkit\/sqlexpression","kind":"symbol","role":"symbol","title":"SQLExpression","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"}],"navigatorTitle":[{"text":"SQLExpression","kind":"identifier"}],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression"}}}