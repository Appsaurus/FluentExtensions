{"topicSections":[{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLPredicateBuilder\/where(_:_:_:)"]}],"hierarchy":{"paths":[["doc:\/\/FluentExtensions\/documentation\/FluentExtensions","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit19SQLPredicateBuilderP","text":"SQLPredicateBuilder"}]}],"kind":"declarations"}],"metadata":{"modules":[{"relatedModules":["SQLKit"],"name":"FluentExtensions"}],"extendedModule":"SQLKit","role":"symbol","title":"SQLPredicateBuilder","externalID":"s:e:s:6SQLKit19SQLPredicateBuilderP16FluentExtensionsE5whereyxAA13SQLExpression_p_AA17SQLBinaryOperatorOqd__tSERd__lF","roleHeading":"Extended Protocol","symbolKind":"extension","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLPredicateBuilder","preciseIdentifier":"s:6SQLKit19SQLPredicateBuilderP"}],"navigatorTitle":[{"kind":"identifier","text":"SQLPredicateBuilder"}]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLPredicateBuilder"},"variants":[{"paths":["\/documentation\/fluentextensions\/sqlkit\/sqlpredicatebuilder"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Extends SQLPredicateBuilder to provide a convenient way to create WHERE clauses with Encodable values."}],"references":{"doc://FluentExtensions/documentation/FluentExtensions/SQLKit":{"title":"SQLKit","type":"topic","kind":"symbol","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit","url":"\/documentation\/fluentextensions\/sqlkit","role":"collection","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/SQLKit/SQLPredicateBuilder/where(_:_:_:)":{"url":"\/documentation\/fluentextensions\/sqlkit\/sqlpredicatebuilder\/where(_:_:_:)","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLPredicateBuilder\/where(_:_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`where`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">(any "},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier","text":"SQLExpression"},{"kind":"text","text":", "},{"preciseIdentifier":"s:6SQLKit17SQLBinaryOperatorO","text":"SQLBinaryOperator","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Adds a WHERE clause to the SQL query comparing a column expression against an encodable value."}],"kind":"symbol","title":"where(_:_:_:)"},"doc://FluentExtensions/documentation/FluentExtensions":{"title":"FluentExtensions","role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions","type":"topic","url":"\/documentation\/fluentextensions","kind":"symbol","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/SQLKit/SQLPredicateBuilder":{"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLPredicateBuilder","navigatorTitle":[{"text":"SQLPredicateBuilder","kind":"identifier"}],"type":"topic","abstract":[{"text":"Extends SQLPredicateBuilder to provide a convenient way to create WHERE clauses with Encodable values.","type":"text"}],"url":"\/documentation\/fluentextensions\/sqlkit\/sqlpredicatebuilder","role":"symbol","title":"SQLPredicateBuilder","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"text":"SQLPredicateBuilder","kind":"identifier","preciseIdentifier":"s:6SQLKit19SQLPredicateBuilderP"}],"kind":"symbol"}}}