{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fluentextensions\/sqlkit\/sqlexpression"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"}]}],"kind":"declarations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Extends "},{"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression","isActive":true,"type":"reference"},{"type":"text","text":" to provide SQL aliasing functionality."}],"metadata":{"extendedModule":"SQLKit","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLExpression","kind":"identifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"}],"modules":[{"relatedModules":["SQLKit"],"name":"FluentExtensions"}],"roleHeading":"Extended Protocol","externalID":"s:e:s:6SQLKit13SQLExpressionP16FluentExtensionsE2asyAA8SQLAliasVSSF","symbolKind":"extension","title":"SQLExpression","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SQLExpression"}]},"hierarchy":{"paths":[["doc:\/\/FluentExtensions\/documentation\/FluentExtensions","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit"]]},"sections":[],"topicSections":[{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression\/CASE(WHEN:ELSE:)-6bkt5","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression\/CASE(WHEN:ELSE:)-dwq2","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression\/as(_:)","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression\/cast(as:)"],"anchor":"Instance-Methods"}],"references":{"doc://FluentExtensions/documentation/FluentExtensions/SQLKit/SQLExpression":{"abstract":[{"type":"text","text":"Extends "},{"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression","type":"reference","isActive":true},{"type":"text","text":" to provide SQL aliasing functionality."}],"type":"topic","url":"\/documentation\/fluentextensions\/sqlkit\/sqlexpression","kind":"symbol","role":"symbol","title":"SQLExpression","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"}],"navigatorTitle":[{"text":"SQLExpression","kind":"identifier"}],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression"},"doc://FluentExtensions/documentation/FluentExtensions/SQLKit":{"title":"SQLKit","type":"topic","kind":"symbol","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit","url":"\/documentation\/fluentextensions\/sqlkit","role":"collection","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/SQLKit/SQLExpression/as(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:6SQLKit8SQLAliasV","text":"SQLAlias","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression\/as(_:)","kind":"symbol","url":"\/documentation\/fluentextensions\/sqlkit\/sqlexpression\/as(_:)","abstract":[{"type":"text","text":"Creates a SQL alias for the current expression."}],"title":"as(_:)","role":"symbol"},"doc://FluentExtensions/documentation/FluentExtensions/SQLKit/SQLExpression/CASE(WHEN:ELSE:)-6bkt5":{"title":"CASE(WHEN:ELSE:)","url":"\/documentation\/fluentextensions\/sqlkit\/sqlexpression\/case(when:else:)-6bkt5","kind":"symbol","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression\/CASE(WHEN:ELSE:)-6bkt5","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"CASE","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"WHEN"},{"text":": [(condition","kind":"text"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression"},{"text":", THEN","kind":"text"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":")], ","kind":"text"},{"kind":"externalParam","text":"ELSE"},{"kind":"text","text":": (any "},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":")?) -> ","kind":"text"},{"preciseIdentifier":"s:16FluentExtensions7SQLCaseV","text":"SQLCase","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Creates a CASE statement with multiple conditions and an optional else clause."}],"role":"symbol","type":"topic"},"doc://FluentExtensions/documentation/FluentExtensions/SQLKit/SQLExpression/CASE(WHEN:ELSE:)-dwq2":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"CASE"},{"kind":"text","text":"("},{"text":"WHEN","kind":"externalParam"},{"text":": (condition","kind":"text"},{"kind":"text","text":": any "},{"text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier"},{"kind":"text","text":", THEN"},{"kind":"text","text":": any "},{"text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier"},{"text":")..., ","kind":"text"},{"kind":"externalParam","text":"ELSE"},{"kind":"text","text":": (any "},{"text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier"},{"text":")?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16FluentExtensions7SQLCaseV","text":"SQLCase"}],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression\/CASE(WHEN:ELSE:)-dwq2","type":"topic","abstract":[{"type":"text","text":"Creates a CASE statement with variadic conditions and an optional else clause."}],"title":"CASE(WHEN:ELSE:)","kind":"symbol","role":"symbol","url":"\/documentation\/fluentextensions\/sqlkit\/sqlexpression\/case(when:else:)-dwq2"},"doc://FluentExtensions/documentation/FluentExtensions":{"title":"FluentExtensions","role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions","type":"topic","url":"\/documentation\/fluentextensions","kind":"symbol","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/SQLKit/SQLExpression/cast(as:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit11SQLDataTypeO","text":"SQLDataType"},{"kind":"text","text":") -> "},{"text":"SQLCast","kind":"typeIdentifier","preciseIdentifier":"s:16FluentExtensions7SQLCastV"}],"type":"topic","kind":"symbol","url":"\/documentation\/fluentextensions\/sqlkit\/sqlexpression\/cast(as:)","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLKit\/SQLExpression\/cast(as:)","abstract":[{"type":"text","text":"Casts the current expression to a specified SQL data type."}],"role":"symbol","title":"cast(as:)"}}}