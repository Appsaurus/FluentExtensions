{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"RangeOperators","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/betweenExclusive","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/betweenExclusiveGreaterThan","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/betweenExclusiveLessThan","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/betweenInclusive"],"generated":true,"anchor":"Enumeration-Cases"},{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/init(rawValue:)","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/init(stringLiteral:)"]},{"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/CaseIterable-Implementations","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/CaseIterable-Implementations","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/Equatable-Implementations","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/ExpressibleByStringLiteral-Implementations","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/RawRepresentable-Implementations"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/FluentExtensions\/documentation\/FluentExtensions"]]},"variants":[{"paths":["\/documentation\/fluentextensions\/rangeoperators"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Defines the available range operators and their behavior"}],"identifier":{"url":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators","interfaceLanguage":"swift"},"metadata":{"role":"symbol","symbolKind":"enum","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"RangeOperators","kind":"identifier"}],"title":"RangeOperators","modules":[{"name":"FluentExtensions"}],"externalID":"s:16FluentExtensions14RangeOperatorsO","roleHeading":"Enumeration","navigatorTitle":[{"text":"RangeOperators","kind":"identifier"}]},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/FluentExtensions\/s12CaseIterableP","doc:\/\/FluentExtensions\/SQ","doc:\/\/FluentExtensions\/s43ExpressibleByExtendedGraphemeClusterLiteralP","doc:\/\/FluentExtensions\/s26ExpressibleByStringLiteralP","doc:\/\/FluentExtensions\/s33ExpressibleByUnicodeScalarLiteralP","doc:\/\/FluentExtensions\/SH","doc:\/\/FluentExtensions\/SY"]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://FluentExtensions/documentation/FluentExtensions/RangeOperators/Equatable-Implementations":{"url":"\/documentation\/fluentextensions\/rangeoperators\/equatable-implementations","title":"Equatable Implementations","kind":"article","type":"topic","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/Equatable-Implementations"},"doc://FluentExtensions/documentation/FluentExtensions/RangeOperators/betweenInclusive":{"abstract":[],"role":"symbol","title":"RangeOperators.betweenInclusive","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/betweenInclusive","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"betweenInclusive","kind":"identifier"}],"url":"\/documentation\/fluentextensions\/rangeoperators\/betweeninclusive","kind":"symbol","type":"topic"},"doc://FluentExtensions/s26ExpressibleByStringLiteralP":{"identifier":"doc:\/\/FluentExtensions\/s26ExpressibleByStringLiteralP","type":"unresolvable","title":"Swift.ExpressibleByStringLiteral"},"doc://FluentExtensions/SQ":{"identifier":"doc:\/\/FluentExtensions\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://FluentExtensions/s12CaseIterableP":{"identifier":"doc:\/\/FluentExtensions\/s12CaseIterableP","type":"unresolvable","title":"Swift.CaseIterable"},"doc://FluentExtensions/documentation/FluentExtensions/RangeOperators/init(rawValue:)":{"abstract":[],"role":"symbol","title":"init(rawValue:)","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/init(rawValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"url":"\/documentation\/fluentextensions\/rangeoperators\/init(rawvalue:)","kind":"symbol","type":"topic"},"doc://FluentExtensions/SY":{"type":"unresolvable","identifier":"doc:\/\/FluentExtensions\/SY","title":"Swift.RawRepresentable"},"doc://FluentExtensions/documentation/FluentExtensions/RangeOperators/ExpressibleByStringLiteral-Implementations":{"abstract":[],"role":"collectionGroup","title":"ExpressibleByStringLiteral Implementations","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/ExpressibleByStringLiteral-Implementations","url":"\/documentation\/fluentextensions\/rangeoperators\/expressiblebystringliteral-implementations","kind":"article","type":"topic"},"doc://FluentExtensions/documentation/FluentExtensions/RangeOperators/CaseIterable-Implementations":{"url":"\/documentation\/fluentextensions\/rangeoperators\/caseiterable-implementations","title":"CaseIterable Implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/CaseIterable-Implementations"},"doc://FluentExtensions/s43ExpressibleByExtendedGraphemeClusterLiteralP":{"type":"unresolvable","identifier":"doc:\/\/FluentExtensions\/s43ExpressibleByExtendedGraphemeClusterLiteralP","title":"Swift.ExpressibleByExtendedGraphemeClusterLiteral"},"doc://FluentExtensions/documentation/FluentExtensions/RangeOperators/betweenExclusive":{"url":"\/documentation\/fluentextensions\/rangeoperators\/betweenexclusive","title":"RangeOperators.betweenExclusive","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"betweenExclusive"}],"abstract":[],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/betweenExclusive"},"doc://FluentExtensions/documentation/FluentExtensions/RangeOperators/RawRepresentable-Implementations":{"abstract":[],"role":"collectionGroup","title":"RawRepresentable Implementations","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/RawRepresentable-Implementations","url":"\/documentation\/fluentextensions\/rangeoperators\/rawrepresentable-implementations","kind":"article","type":"topic"},"doc://FluentExtensions/documentation/FluentExtensions":{"title":"FluentExtensions","role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions","type":"topic","url":"\/documentation\/fluentextensions","kind":"symbol","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/RangeOperators/ExpressibleByExtendedGraphemeClusterLiteral-Implementations":{"url":"\/documentation\/fluentextensions\/rangeoperators\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations"},"doc://FluentExtensions/SH":{"identifier":"doc:\/\/FluentExtensions\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://FluentExtensions/s33ExpressibleByUnicodeScalarLiteralP":{"identifier":"doc:\/\/FluentExtensions\/s33ExpressibleByUnicodeScalarLiteralP","title":"Swift.ExpressibleByUnicodeScalarLiteral","type":"unresolvable"},"doc://FluentExtensions/documentation/FluentExtensions/RangeOperators":{"abstract":[{"text":"Defines the available range operators and their behavior","type":"text"}],"role":"symbol","title":"RangeOperators","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RangeOperators"}],"navigatorTitle":[{"text":"RangeOperators","kind":"identifier"}],"url":"\/documentation\/fluentextensions\/rangeoperators","kind":"symbol","type":"topic"},"doc://FluentExtensions/documentation/FluentExtensions/RangeOperators/betweenExclusiveLessThan":{"url":"\/documentation\/fluentextensions\/rangeoperators\/betweenexclusivelessthan","title":"RangeOperators.betweenExclusiveLessThan","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"betweenExclusiveLessThan","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/betweenExclusiveLessThan"},"doc://FluentExtensions/documentation/FluentExtensions/RangeOperators/init(stringLiteral:)":{"abstract":[],"role":"symbol","title":"init(stringLiteral:)","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/init(stringLiteral:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"stringLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"url":"\/documentation\/fluentextensions\/rangeoperators\/init(stringliteral:)","kind":"symbol","type":"topic"},"doc://FluentExtensions/documentation/FluentExtensions/RangeOperators/betweenExclusiveGreaterThan":{"url":"\/documentation\/fluentextensions\/rangeoperators\/betweenexclusivegreaterthan","title":"RangeOperators.betweenExclusiveGreaterThan","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"betweenExclusiveGreaterThan"}],"abstract":[],"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/RangeOperators\/betweenExclusiveGreaterThan"}}}