{"hierarchy":{"paths":[["doc:\/\/FluentExtensions\/documentation\/FluentExtensions","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Controller","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Controller\/Action"]]},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Controller\/Action\/decodeReflectively(from:overwritesMissingKeysAsNilValues:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeReflectively","kind":"identifier"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decoder"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"text":", ","kind":"text"},{"text":"overwritesMissingKeysAsNilValues","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":" = false) ","kind":"text"},{"kind":"keyword","text":"throws"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/fluentextensions\/controller\/action\/decodereflectively(from:overwritesmissingkeysasnilvalues:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"Decodable.decodeReflectively(from:overwritesMissingKeysAsNilValues:)","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Instance Method","extendedModule":"Swift","modules":[{"name":"FluentExtensions","relatedModules":["Swift"]}],"symbolKind":"method","externalID":"s:Se17CodableExtensionsE18decodeReflectively4from32overwritesMissingKeysAsNilValuesys7Decoder_p_SbtKF::SYNTHESIZED::s:16FluentExtensions10ControllerC6ActionO","role":"symbol","title":"decodeReflectively(from:overwritesMissingKeysAsNilValues:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeReflectively"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"overwritesMissingKeysAsNilValues"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}]},"references":{"doc://FluentExtensions/documentation/FluentExtensions/Controller/Action":{"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Controller\/Action","url":"\/documentation\/fluentextensions\/controller\/action","navigatorTitle":[{"text":"Action","kind":"identifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Resource"},{"type":"text","text":" conforms to "},{"code":"Content","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Resource"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parameter"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Create"},{"text":" conforms to ","type":"text"},{"code":"Content","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Read"},{"text":" conforms to ","type":"text"},{"code":"Content","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Update"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Content"},{"text":", and ","type":"text"},{"code":"SearchResult","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Content","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Available CRUD actions that can be supported by a controller.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Action","kind":"identifier"}],"title":"Controller.Action"},"doc://FluentExtensions/documentation/FluentExtensions/Controller":{"abstract":[{"type":"text","text":"A base controller class that provides RESTful API endpoints for a resource type."}],"url":"\/documentation\/fluentextensions\/controller","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Controller","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Controller"}],"title":"Controller","kind":"symbol","navigatorTitle":[{"text":"Controller","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://FluentExtensions/documentation/FluentExtensions":{"title":"FluentExtensions","role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions","type":"topic","url":"\/documentation\/fluentextensions","kind":"symbol","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/Controller/Action/decodeReflectively(from:overwritesMissingKeysAsNilValues:)":{"kind":"symbol","type":"topic","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeReflectively","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"overwritesMissingKeysAsNilValues"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"decodeReflectively(from:overwritesMissingKeysAsNilValues:)","url":"\/documentation\/fluentextensions\/controller\/action\/decodereflectively(from:overwritesmissingkeysasnilvalues:)","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/Controller\/Action\/decodeReflectively(from:overwritesMissingKeysAsNilValues:)"}}}