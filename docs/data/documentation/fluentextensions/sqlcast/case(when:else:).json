{"identifier":{"url":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCast\/CASE(WHEN:ELSE:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"CASE","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"WHEN"},{"text":" ","kind":"text"},{"text":"cases","kind":"internalParam"},{"text":": [(condition","kind":"text"},{"kind":"text","text":": any "},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":", THEN"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier","text":"SQLExpression"},{"text":")], ","kind":"text"},{"text":"ELSE","kind":"externalParam"},{"text":": (any ","kind":"text"},{"text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier"},{"text":")? = nil) -> ","kind":"text"},{"preciseIdentifier":"s:16FluentExtensions7SQLCaseV","kind":"typeIdentifier","text":"SQLCase","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"cases","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Array of tuples containing condition-predicate pairs"}]}]},{"name":"ELSE","content":[{"inlineContent":[{"type":"text","text":"Optional alternative expression for when no conditions match"}],"type":"paragraph"}]}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A new SQLCase expression"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Creates a CASE statement with multiple conditions and an optional else clause.","type":"text"}],"variants":[{"paths":["\/documentation\/fluentextensions\/sqlcast\/case(when:else:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","title":"CASE(WHEN:ELSE:)","modules":[{"name":"FluentExtensions","relatedModules":["SQLKit"]}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"CASE","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WHEN","kind":"externalParam"},{"text":": [(condition","kind":"text"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression"},{"kind":"text","text":", THEN"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"},{"text":")], ","kind":"text"},{"text":"ELSE","kind":"externalParam"},{"text":": (any ","kind":"text"},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":")?) -> ","kind":"text"},{"text":"SQLCase","kind":"typeIdentifier","preciseIdentifier":"s:16FluentExtensions7SQLCaseV"}],"roleHeading":"Instance Method","externalID":"s:6SQLKit13SQLExpressionP16FluentExtensionsE4CASE4WHEN4ELSEAD7SQLCaseVSayAaB_p9condition_AaB_p4THENtG_AaB_pSgtF::SYNTHESIZED::s:16FluentExtensions7SQLCastV","extendedModule":"SQLKit"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/FluentExtensions\/documentation\/FluentExtensions","doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCast"]]},"sections":[],"references":{"doc://FluentExtensions/documentation/FluentExtensions/SQLCast/CASE(WHEN:ELSE:)":{"identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCast\/CASE(WHEN:ELSE:)","url":"\/documentation\/fluentextensions\/sqlcast\/case(when:else:)","role":"symbol","abstract":[{"text":"Creates a CASE statement with multiple conditions and an optional else clause.","type":"text"}],"kind":"symbol","title":"CASE(WHEN:ELSE:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"CASE","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"WHEN"},{"text":": [(condition","kind":"text"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"},{"kind":"text","text":", THEN"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"},{"kind":"text","text":")], "},{"kind":"externalParam","text":"ELSE"},{"kind":"text","text":": (any "},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"},{"text":")?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16FluentExtensions7SQLCaseV","text":"SQLCase"}],"type":"topic"},"doc://FluentExtensions/documentation/FluentExtensions":{"title":"FluentExtensions","role":"collection","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions","type":"topic","url":"\/documentation\/fluentextensions","kind":"symbol","abstract":[]},"doc://FluentExtensions/documentation/FluentExtensions/SQLCast":{"url":"\/documentation\/fluentextensions\/sqlcast","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SQLCast"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SQLCast","kind":"identifier"}],"title":"SQLCast","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCast","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A SQL expression that represents a CAST operation to convert data from one type to another."}]},"doc://FluentExtensions/documentation/FluentExtensions/SQLCase":{"url":"\/documentation\/fluentextensions\/sqlcase","identifier":"doc:\/\/FluentExtensions\/documentation\/FluentExtensions\/SQLCase","kind":"symbol","title":"SQLCase","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLCase"}],"abstract":[{"text":"A type that represents a SQL CASE statement expression.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SQLCase"}],"type":"topic"}}}